{"version":3,"sources":["team.png","State/UserContext.js","Properties/Properties.js","Components/Forms/NavFriendsDropdown.js","Components/Forms/NavGameinvitesDropdown.js","Components/Nav.js","Components/Account.js","Components/Utils/ModalConfirmationDialog.js","Components/Games.js","Components/Forms/formUtils/Status.js","Components/Forms/AddGameMember.js","Components/Game.js","Components/Unauthorized.js","Components/Home.js","Components/Forms/formUtils/MyError.js","Components/Forms/ChooseNickname.js","Components/ProtectedRoute.js","Components/Forms/CreatePlan.js","Components/Forms/EditPlanText.js","Components/Friends.js","Components/Forms/AddFriend.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","UserContext","createContext","UserProvider","props","useState","Cookies","get","user","setUser","Provider","value","children","backEndAddress","properties","clientId","websocketsUri","oauthLoginUri","oauthLogoutUri","chooseNicknameUri","getMyGamesUri","getGameByIdUri","createGameUri","editGameUri","deleteGameUri","inviteFriendToGame","incomingGameInvites","declineGameInvite","acceptGameInvite","removeGameMember","getMyFriendsUri","inviteFriendUri","getIncomingRequestsUri","acceptFriendRequestUri","removeFriendUri","getFriendsInvitableToGame","NavFriendsDropdown","requestList","declineRequest","declineRequestFunction","acceptRequest","acceptRequestFunction","className","type","id","data-toggle","aria-haspopup","aria-expanded","size","icon","faUserFriends","length","faExclamationCircle","map","request","key","onClick","faTimesCircle","faCheckCircle","NavGameinvitesDropdown","declineGameInviteFunction","gameInvites","faBell","authorAndTitle","Nav","useContext","requests","setRequests","setGameInvites","history","useHistory","location","useLocation","useEffect","getFriendRequests","getGameInvites","stompClient","undefined","Stomp","over","SockJS","debug","connect","frame","subscribe","notification","body","message","startsWith","push","pathname","status","disconnect","login","response","a","fetch","method","headers","credentials","JSON","stringify","then","json","data","to","src","logo","alt","data-target","aria-controls","aria-label","href","gameId","getRequests","scope","accessType","prompt","uxMode","redirectUri","backendAddress","responseType","buttonText","onSuccess","onFailure","cookiePolicy","onLogoutSuccess","Account","String","ModalConfirmationDialog","functionArgument","idArgument","Array","isArray","functionToExecute","warningArgument","actionPrefix","warningText","tabIndex","role","aria-labelledby","aria-hidden","name","data-dismiss","Games","games","setGames","ownerBackground","background","guestBackground","deleteGame","leaveGame","nicknameAndGameId","faPlus","game","style","authorNickname","Fragment","title","Date","creationDateTime","toLocaleString","getTimezoneOffset","faInfoCircle","nicknameErrors","gameplanErrors","friendRequestErrors","Status","statusProp","includes","AddGameMember","invitableFriends","setInvitableFriends","getInvitableMembers","toString","$","unbind","on","friend","invitedNickname","text","faPlusCircle","Game","setGame","gameMembers","setGameMembers","isDataLoaded","setIsDataLoaded","match","isAuthor","guestMemberBackground","members","faEdit","member","mainText","Unauthorized","Home","MyError","touched","ValidationSchema","Yup","shape","nicknameField","max","required","matches","ChooseNickname","initialValues","validationSchema","onSubmit","values","setSubmitting","setStatus","answer","errors","handleChange","handleBlur","handleSubmit","isSubmitting","placeholder","onChange","onBlur","disabled","ProtectedRoute","Component","component","rest","render","state","from","titleField","mainTextField","CreatePlan","rows","e","EditPlanText","useParams","gameDetails","setGameDetails","enableReinitialize","Friends","friends","setFriends","deleteFriend","AddFriend","App","path","exact","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.62f86605.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team.48d82d68.png\";","import React,{useState, createContext} from 'react'\nimport Cookies from 'js-cookie'\n\nexport const UserContext = createContext()\n\nexport const UserProvider = (props) =>{\n    const [user, setUser] = useState(Cookies.get('nickname'))\n\n    return(\n        <UserContext.Provider value={[user, setUser]}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}","const backEndAddress = \"https://teamplanner.xyz/\"\r\n\r\nexport const properties = {\r\n    clientId: \"524272934250-0eeakh761npvpo8th9s1lepqobgebjj5.apps.googleusercontent.com\",\r\n\r\n    websocketsUri:              backEndAddress+\"sockets\",\r\n\r\n    oauthLoginUri:              backEndAddress+'oauth/login',\r\n    oauthLogoutUri:             backEndAddress+'oauth/logout',\r\n    chooseNicknameUri:          backEndAddress+'oauth/choosenickname',\r\n\r\n    getMyGamesUri:              backEndAddress+'gameplans/all',\r\n    getGameByIdUri:             backEndAddress+'gameplans/getById/',\r\n    createGameUri:              backEndAddress+'gameplans/create',\r\n    editGameUri:                backEndAddress+'gameplans/editById/',\r\n    deleteGameUri:              backEndAddress+'gameplans/delete/',\r\n    inviteFriendToGame:         backEndAddress+'gameplans/inviteToGame/',\r\n    incomingGameInvites:        backEndAddress+'gameplans/incomingGameInvites',\r\n    declineGameInvite:          backEndAddress+'gameplans/declineGameInvite/',\r\n    acceptGameInvite:           backEndAddress+'gameplans/acceptGameInvite/',\r\n    removeGameMember:           backEndAddress+'gameplans/removeGameMember/',\r\n\r\n    getMyFriendsUri:            backEndAddress+\"friends/myFriends\",\r\n    inviteFriendUri:            backEndAddress+\"friends/invite\",\r\n    getIncomingRequestsUri:     backEndAddress+\"friends/incomingRequests\",\r\n    acceptFriendRequestUri:     backEndAddress+\"friends/acceptRequest\",\r\n    removeFriendUri:            backEndAddress+\"friends/removeFriend\",\r\n    getFriendsInvitableToGame:  backEndAddress+\"friends/invitableToGame/\"\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUserFriends,faTimesCircle, faCheckCircle, faExclamationCircle} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function NavFriendsDropdown(props){\r\n\r\n    const requestList = props.requestList\r\n    const declineRequest = props.declineRequestFunction\r\n    const acceptRequest = props.acceptRequestFunction\r\n\r\n    return(\r\n        <div className=\"btn-group dropleft\">\r\n            <button type=\"button\" id=\"friends-icon\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n                <FontAwesomeIcon size=\"2x\" icon={faUserFriends} />\r\n                {requestList.length === 0 ? null :\r\n                <i id=\"friend-notification\"><FontAwesomeIcon size=\"1x\" icon={faExclamationCircle}/></i>}\r\n            </button>\r\n            <div className=\"dropdown-menu mt-5 pl-1 dropdown-outer\" id=\"friendsDropdown\">\r\n                <h6 className=\"regular-text text-dark\">Incoming requests</h6>\r\n                <hr className=\"mb-0 mt-0 pb-2\"/>\r\n                <div className=\"requests-container\">\r\n                {requestList.map(request => ( \r\n                    <div className=\"friend-request sub-bar\" key={request}>\r\n                        <div className=\"border rounded-lg border-secondary inner dropdown-inner pr-1 pl-1 pb-1 mb-1 h6\" \r\n                            id=\"dropdown-nicknames\"> {request}\r\n                        </div>\r\n                        <button id=\"decline-friendrequest\" onClick={() => declineRequest(request)}>\r\n                            <FontAwesomeIcon icon={faTimesCircle}/>\r\n                        </button>\r\n                        <button id=\"accept-friendrequest\" onClick={() => acceptRequest(request)}>\r\n                            <FontAwesomeIcon icon={faCheckCircle}/>\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimesCircle, faCheckCircle, faExclamationCircle, faBell} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function NavGameinvitesDropdown(props){\r\n\r\n    const declineRequest = props.declineGameInviteFunction\r\n    const acceptRequest = props.acceptRequestFunction\r\n    const gameInvites = props.gameInvites\r\n\r\n    return(\r\n        <div className=\"btn-group dropleft\">\r\n            <button type=\"button\" id=\"friends-icon\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n                <FontAwesomeIcon size=\"2x\" icon={faBell} />\r\n                {gameInvites.length === 0 ? null :\r\n                <i id=\"game-notification\"><FontAwesomeIcon size=\"1x\" icon={faExclamationCircle}/></i>\r\n                }\r\n            </button>\r\n            <div className=\"dropdown-menu mt-5 pl-1 dropdown-outer\" id=\"gamesDropdown\">\r\n                <h6 className=\"regular-text text-dark\">Incoming game invites</h6>\r\n                <hr className=\"mb-0 mt-0 pb-2\"/>\r\n                <div className=\"requests-container\">\r\n                {gameInvites.map(authorAndTitle => ( \r\n                    <div key={authorAndTitle[0]+authorAndTitle[1]}>\r\n                        <div className=\"friend-request sub-bar\" >\r\n                            <div className=\"border rounded-lg border-secondary inner dropdown-inner pr-1 pl-1 pb-1 mb-1 h6\" \r\n                                id=\"dropdown-nicknames\"> {authorAndTitle[0]}\r\n                            </div>\r\n                            <h6 className=\"pl-1\">invites you to:</h6> \r\n                            <button id=\"decline-friendrequest\" onClick={() => declineRequest(authorAndTitle[2])}>\r\n                                <FontAwesomeIcon icon={faTimesCircle}/>\r\n                            </button>\r\n                            <button id=\"accept-friendrequest\" onClick={() => acceptRequest(authorAndTitle[2])}>\r\n                                <FontAwesomeIcon icon={faCheckCircle}/>\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <h5>{authorAndTitle[1]}</h5>\r\n                        </div>\r\n                        <hr className=\"mb-0 mt-0 pb-2\"/>\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React, {useContext, useState,useEffect } from 'react'\nimport {Link, useHistory, useLocation} from \"react-router-dom\"\nimport {GoogleLogin, GoogleLogout} from 'react-google-login'\nimport {UserContext} from '../State/UserContext'\nimport Cookies from 'js-cookie'\nimport {properties} from '../Properties/Properties'\nimport logo from '../team.png'\nimport NavFriendsDropdown from './Forms/NavFriendsDropdown'\nimport NavGameinvitesDropdown from './Forms/NavGameinvitesDropdown'\nimport * as SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\n\nexport default function Nav(props){\n\n    const [user, setUser] = useContext(UserContext)\n    const [requests, setRequests] = useState([])\n    const [gameInvites, setGameInvites] = useState([])\n    const history = useHistory();\n    const location = useLocation();\n\n\n    useEffect(() => {\n        setUser(Cookies.get('nickname'))\n        getFriendRequests()\n        getGameInvites()\n    }, [setUser])\n\n    useEffect(() => {\n\n        let stompClient = null\n        if(user!==undefined && user!=='*()failed' && user!=='*()unset'){\n            stompClient = Stomp.over(new SockJS(properties.websocketsUri))\n            stompClient.debug = null\n            stompClient.connect({}, function (frame) {\n                stompClient.subscribe('/user/queue/requests', function (notification) {\n                   if(notification.body===\"Friend request\"){\n                       getFriendRequests()\n                   }else if(notification.body===\"Game invite\"){\n                       getGameInvites()\n                   }\n                });\n            }, function(message){\n                if(message.startsWith(\"Whoops!\")){\n                    history.push(\"/\")\n                    history.push(location.pathname)\n                }\n            });\n        }\n            return() => {\n                if (stompClient !== null) {\n                    if(stompClient.status === 'CONNECTED') stompClient.disconnect();\n                }\n            }\n        \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [history, user])\n\n\n    //Runs on successful Login with Google\n    ////////////////////////////////////////////////////////////\n    const login = (response) => {\n        (async () => {\n            const apiResponse  = await fetch(properties.oauthLoginUri, {\n                \n                method: 'POST',\n                headers: {\n                    'Accept':'application/json',\n                    'Content-type':'application/json'\n                },\n                credentials: 'include',\n                body: JSON.stringify({\"authCode\":response['code']})\n            });\n            if(apiResponse.status===200){\n                //nickname cookie is added by backend if login was successful\n                setUser(Cookies.get('nickname'))\n                if(Cookies.get('nickname')==='*()unset'){\n                    history.push(\"/chooseNickname\")\n                }else{\n                    history.push(\"/\")\n                }\n            }else{\n                setUser(\"*()failed\")\n                history.push(location.pathname)\n            }\n        })();\n\n    }\n\n    //Runs on Google's \"Logout\" button click\n    ///////////////////////////////////////////////////////////////\n    const logOut = () => {\n        if(Cookies.get('nickname')===undefined){\n            setUser(undefined)\n            history.push(\"/\")\n            history.push(location.pathname)\n            return\n        }\n        (async () => {\n            await fetch(properties.oauthLogoutUri, {\n                credentials: 'include',\n                method: 'POST',\n                headers: {\n                    'Accept':'text/plain',\n                    'Content-type':'text/plain'\n                }\n            });      \n        })()\n        setUser(undefined)\n        history.push(\"/\")\n        history.push(location.pathname)\n    }\n\n    const getFriendRequests = () => {\n        if(Cookies.get('nickname')!==undefined && Cookies.get('nickname')!=='*()failed'){\n            (async () => {\n                await fetch(properties.getIncomingRequestsUri, {\n                    credentials: 'include',\n                    method: 'GET',\n                    headers: {\n                        'Accept':'application/json'\n                    }\n                }).then(response => {\n                    return response.json()\n                }).then(data => {\n                    setRequests(data)\n                })\n            })()\n        }\n    }\n\n    const getGameInvites = () => {\n        if(Cookies.get('nickname')!==undefined && Cookies.get('nickname')!=='*()failed'){\n            (async () => {\n                await fetch(properties.incomingGameInvites, {\n                    credentials: 'include',\n                    method: 'GET',\n                    headers: {\n                        'Accept':'application/json'\n                    }\n                }).then(response => {\n                    return response.json()\n                }).then(data => {\n                    setGameInvites(data)\n                })\n            })()\n        }\n    }\n\n    const declineFriendRequest = (request) => {\n        (async () => {\n\n            await fetch(properties.removeFriendUri , {\n                credentials: 'include',\n                method: 'DELETE',\n                headers: {\n                    'Content-type':'text/plain'\n                },\n                body: request\n            }).then(response => {\n                getFriendRequests()\n            })\n        })();\n    }\n\n    const declineGameInvite = (gameId) => {\n        (async () => {\n\n            await fetch(properties.declineGameInvite+gameId , {\n                credentials: 'include',\n                method: 'DELETE',\n                headers: {\n                    'Content-type':'text/plain'\n                },\n            }).then(response => {\n                getGameInvites()\n            })\n        })();\n    }\n\n    const acceptFriendRequest = (request) => {\n        (async () => {\n            await fetch(properties.acceptFriendRequestUri , {\n                credentials: 'include',\n                method: 'PATCH',\n                headers: {\n                    'Content-type':'text/plain'\n                },\n                body: request\n            }).then(response => {\n               getFriendRequests() \n               if(response.status === 200 && location.pathname==='/friends'){\n                    history.push(\"/\");\n                    history.push(\"/friends\")\n               }\n            })\n        })();\n    }\n\n    const acceptGameInvite = (gameId) => {\n        (async () => {\n            await fetch(properties.acceptGameInvite+gameId , {\n                credentials: 'include',\n                method: 'PATCH',\n                headers: {\n                    'Content-type':'text/plain'\n                },\n            }).then(response => {\n                getGameInvites()\n                if(response.status === 200 && location.pathname==='/games'){\n                    history.push(\"/\");\n                    history.push(\"/games\")\n               }\n            })\n        })();\n    }\n\n    return(\n        \n        <nav className=\"navbar sticky-top navbar-expand navbar-dark bg-dark\">\n            <div className=\"container\" id=\"navbar-container\">\n                <Link to=\"/\" >\n                    <img id=\"nav-logo\" src={logo} alt=\"logo\" />\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse pl-4\" id=\"navbarSupportedContent\" >\n                    <ul className=\"navbar-nav mr-auto\">\n                        <Link to=\"/\"  >\n                        <li className=\"nav-item active\">\n                            <span className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></span>\n                        </li>\n                        </Link>\n                        <Link to=\"/friends\" >\n                        <li className=\"nav-item active\">\n                            <span className=\"nav-link\" >Friends <span className=\"sr-only\">(current)</span></span>\n                        </li>\n                        </Link>\n                        <Link to=\"/games\" >\n                        <li className=\"nav-item active\">\n                            <span className=\"nav-link\">Plans <span className=\"sr-only\">(current)</span></span>\n                        </li>\n                        </Link>\n                    </ul>\n                    {user!==undefined && user!=='*()failed' && user!=='*()unset' ?\n                        <div id=\"nickname-requests\"> \n                            <NavGameinvitesDropdown acceptRequestFunction={acceptGameInvite} getRequests={getFriendRequests}\n                            declineGameInviteFunction={declineGameInvite} gameInvites={gameInvites}/>\n\n                            <NavFriendsDropdown acceptRequestFunction={acceptFriendRequest} getRequests={getFriendRequests}\n                            declineRequestFunction={declineFriendRequest} requestList={requests}/>\n\n                            <Link to=\"/chooseNickname\"><div id=\"nickname\">{user}</div></Link>\n                        </div>\n                    :\n                    <div>&nbsp;</div>}\n\n                    {user===undefined || user==='*()failed' ?\n                        <GoogleLogin\n                            clientId={properties.clientId}//add your google cliend ID to Properties/Properties.js\n                            scope=\"profile email openid\"\n                            accessType=\"offline\"\n                            prompt=\"consent\"\n                            uxMode=\"redirect\"\n                            redirectUri={properties.backendAddress}\n                            responseType=\"code\"\n                            buttonText=\"Log-in\"\n                            onSuccess={login}\n                            onFailure={login}\n                            cookiePolicy={'single_host_origin'}\n                        />\n                    :\n                        <GoogleLogout\n                            clientId={properties.clientId}\n                            buttonText=\"Log-out\"\n                            onLogoutSuccess={logOut}\n                        />\n                    }\n                </div>\n             </div> \n        </nav>\n    );\n\n}","import React, {useContext} from 'react'\r\nimport {UserContext} from '../State/UserContext'\r\n\r\nexport default function Account(){\r\n\r\n    const [user] = useContext(UserContext)\r\n       \r\n    return(\r\n    <h2 className=\"regular-text\">Welcome, {String(user)} !</h2>\r\n    )\r\n}\r\n            \r\n  \r\n","import React from 'react'\r\n\r\nexport default function ModalConfirmationDialog(props) {\r\n\r\n    const functionArgument = props.functionArgument\r\n    let idArgument = \"\"\r\n    if(Array.isArray(props.functionArgument)){\r\n        idArgument = props.functionArgument[0]+props.functionArgument[1]\r\n    }else{\r\n        idArgument = props.functionArgument\r\n    }\r\n    const functionToExecute = props.functionToExecute\r\n    const warningArgument = props.warningArgument\r\n    const actionPrefix = props.actionPrefix\r\n    const warningText = props.warningText\r\n\r\n    \r\n    return(\r\n        <div className=\"modal fade bd-example-modal-lg\" id={\"modalPopupId\"+actionPrefix+idArgument}\r\n        tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n                <div className=\"modal-content\" name={\"modal-\"+warningArgument}>\r\n                    <div className=\"modal-header\">\r\n                        <h4 className=\"modal-title\" id=\"exampleModalLongTitle\">{warningText} {warningArgument}</h4>\r\n                        <button type=\"button\" className=\"close\" id=\"modalClose\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span> \r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <h5>Are you sure ?</h5>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\"\r\n                        onClick={() => functionToExecute(functionArgument)} data-dismiss=\"modal\">Delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, useContext, useEffect} from 'react'\r\nimport {UserContext} from '../State/UserContext'\r\nimport Cookies from 'js-cookie'\r\nimport {Link, useHistory, useLocation} from 'react-router-dom'\r\nimport {properties} from '../Properties/Properties'\r\nimport ModalConfirmationDialog from './Utils/ModalConfirmationDialog'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faInfoCircle, faPlus, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport default function Games() {\r\n\r\n    const [games, setGames] = useState([])\r\n    const [user, setUser] = useContext(UserContext)\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    const ownerBackground ={\r\n        background: \"rgb(169, 192, 124)\"\r\n    }\r\n    const guestBackground = {\r\n        background: \"rgb(124, 170, 192)\"\r\n    }\r\n\r\n    useEffect(() => {\r\n        setUser(Cookies.get('nickname'));\r\n        if(Cookies.get('nickname')!==undefined && Cookies.get('nickname')!==\"*()unset\"){\r\n            fetch(properties.getMyGamesUri, {\r\n                credentials: 'include',\r\n                method: 'GET',\r\n                headers:{\r\n                    'Accept':'application/json'\r\n                }\r\n            }).then(response => {\r\n                return response.json();\r\n            }).then( data => {\r\n                setGames(data)\r\n            })\r\n        }\r\n    }, [setUser])\r\n    \r\n    const deleteGame = (gameId) => {\r\n        fetch(properties.deleteGameUri+gameId, {\r\n            credentials: 'include',\r\n            method: 'DELETE',\r\n        }).then(response => {\r\n            history.push(\"/\")\r\n            history.push(location.pathname)\r\n        })\r\n    }\r\n\r\n    const leaveGame = (nicknameAndGameId) => {\r\n        fetch(properties.removeGameMember+nicknameAndGameId[1], {\r\n            credentials: 'include',\r\n            method: 'DELETE',\r\n            body: nicknameAndGameId[0]\r\n        }).then(response => {\r\n            history.push(\"/\")\r\n            history.push(location.pathname)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div id=\"card-container\" className=\"card-deck\">\r\n\r\n            <div className=\"col-12 ml-1 sub-bar\">\r\n            <Link to=\"/createPlan\">\r\n                <button id=\"add-button\">\r\n                    <FontAwesomeIcon icon={faPlus} size=\"2x\"/>\r\n                </button>\r\n            </Link>\r\n            <h1 className=\"regular-text\">Plans</h1>\r\n            </div>\r\n            {games.map(game => (\r\n                <div className=\"col-sm-12 col-md-6 col-lg-4 mt-2 mb-4\" key={game.id}>\r\n                    <div className=\"card\" style={game.authorNickname === user ? ownerBackground : guestBackground}>\r\n                        <div className=\"card-body mb-0 p-0\">\r\n                            {game.authorNickname === user ?\r\n                                <React.Fragment>\r\n                                    <ModalConfirmationDialog functionArgument={game.id} functionToExecute={deleteGame} \r\n                                    actionPrefix=\"game\" warningText=\"Deleting: \" warningArgument={game.title}/>\r\n                                    <button id=\"delete-game\" data-toggle=\"modal\" data-target={\"#modalPopupIdgame\"+game.id}>\r\n                                        <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                    </button>\r\n                                </React.Fragment>\r\n                                :\r\n                                <React.Fragment>\r\n                                    <ModalConfirmationDialog functionArgument={[user, game.id]} \r\n                                    functionToExecute={leaveGame} actionPrefix=\"leaveGame\" warningText=\"Leaving plan: \" \r\n                                    warningArgument={game.title}/>\r\n                                    <button id=\"delete-game\" data-toggle=\"modal\" data-target={\"#modalPopupIdleaveGame\"+user+game.id}>\r\n                                    <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                    </button>\r\n                                </React.Fragment>\r\n                            }\r\n                            \r\n                            <h5 className=\"card-title h5 pl-3 pr-4\">{game.title}</h5>\r\n                        </div>\r\n                        <hr className=\"mb-0 mt-0\"/>\r\n                        <h6 className=\"ml-3\">By: {game.authorNickname}</h6>\r\n                        <div className=\"card-footer pl-3\">\r\n                            <small className=\"text-muted\">Created: {new Date(game.creationDateTime).toLocaleString(\"en-GB\")+\r\n                            \" GMT+\"+new Date().getTimezoneOffset()/-60} \r\n                            </small>\r\n                            <Link to={\"/game/\"+game.id}>\r\n                            <button id=\"game-details\">\r\n                                <FontAwesomeIcon icon={faInfoCircle}/>\r\n                            </button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nconst nicknameErrors = [\"Can't choose same nickname\", \"Nickname taken\",\r\n                        \"Error, user doesn't exist\", \"Incorrect nickname\"]\r\nconst gameplanErrors = [\"Game plan with this title already exists\", \"You are not in this game\"]\r\nconst friendRequestErrors = [\"Request is pending\",\"This person is already your friend\",\"Can't invite yourself\"]\r\n\r\nexport default function Status(props) {\r\n \r\n    if(props.statusProp === \"Nickname changed\" || props.statusProp === \"Game plan created\" ||\r\n       props.statusProp === \"Friend request sent\"){\r\n        return <h4 className=\"text-success\">{props.statusProp}</h4>\r\n    }else if(nicknameErrors.includes(props.statusProp) || \r\n             gameplanErrors.includes(props.statusProp) || friendRequestErrors.includes(props.statusProp)){\r\n        \r\n            return <h4 className=\"text-danger\">{props.statusProp}</h4>\r\n    }\r\n    return <div className=\"empty-sizeless-div\">&nbsp;</div>\r\n}","import React, {useState, useEffect, useContext} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport $ from 'jquery'\r\nimport {properties} from \"../../Properties/Properties\"\r\nimport Cookies from 'js-cookie'\r\nimport {UserContext} from '../../State/UserContext'\r\n\r\n\r\nexport default function AddGameMember(props){\r\n\r\n    const [invitableFriends, setInvitableFriends] = useState([])\r\n    const[, setUser] = useContext(UserContext)\r\n\r\n    const getInvitableMembers = () => {\r\n        const gameId = props.gameId;\r\n        setUser(Cookies.get('nickname'));\r\n        fetch(properties.getFriendsInvitableToGame+gameId, {\r\n            credentials: 'include',\r\n            method: 'GET',\r\n            headers:{\r\n                'Accept':'application/json'\r\n            }\r\n        }).then(response => {\r\n            if(response.status===403){\r\n                setInvitableFriends('Error');\r\n                return \"403\";\r\n            }\r\n            return response.json();\r\n        }).then( data => {\r\n            if(data.toString()!==\"403\"){\r\n                setInvitableFriends(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    const addMember = (invitedNickname) => {\r\n        setUser(Cookies.get('nickname'));\r\n        fetch(properties.inviteFriendToGame+props.gameId, {\r\n            credentials: 'include',\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept':'text/plain',\r\n                'Content-type':'text/plain'\r\n            },\r\n            body: invitedNickname\r\n        }).then(response => {//if user timed out - response status will not be 200\r\n            if(response.status!==200){//then update user cotnext to update all components\r\n                setUser(Cookies.get('nickname'))\r\n            }\r\n            return response.text()})\r\n        }\r\n\r\n  \r\n\r\n    $('.dropright').unbind().on('show.bs.dropdown', function () {\r\n        getInvitableMembers()\r\n    })\r\n    \r\n    useEffect(() => {\r\n        getInvitableMembers()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <div className=\"btn-group dropright\" >\r\n            <button type=\"button\" id=\"add-member\" data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\" aria-expanded=\"false\" >\r\n                <FontAwesomeIcon size=\"1x\" icon={faPlus} />\r\n            </button>\r\n            <div className=\"dropdown-menu mt-5 pl-1\" id=\"addMemberDropdown\" >\r\n                <h6 className=\"regular-text text-dark\">Add friend to plan</h6>\r\n                <hr className=\"mb-0 mt-0 pb-2\"/>\r\n                <div className=\"requests-container\">\r\n                {invitableFriends.map(friend => (\r\n\r\n                    <div className=\"friend-request sub-bar\" key={friend}>\r\n                        <div className=\"border rounded-lg border-secondary inner dropdown-inner pr-1 pl-1 pb-1 mb-1 h6\" \r\n                            id=\"dropdown-nicknames\"> {friend}\r\n                        </div>\r\n\r\n                        <button id=\"accept-friendrequest\" onClick={() => addMember(friend)}>\r\n                            <FontAwesomeIcon icon={faPlusCircle}/>\r\n                        </button>\r\n                        \r\n                    </div>\r\n\r\n                ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React,{useState, useEffect, useContext} from 'react'\r\nimport {UserContext} from '../State/UserContext'\r\nimport Cookies from 'js-cookie'\r\nimport {properties} from '../Properties/Properties'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit} from '@fortawesome/free-solid-svg-icons'\r\nimport Status from './Forms/formUtils/Status'\r\nimport {faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport ModalConfirmationDialog from './Utils/ModalConfirmationDialog'\r\nimport AddGameMember from './Forms/AddGameMember'\r\n\r\nexport default function Game(props){\r\n\r\n    const [game, setGame] = useState({})\r\n    const [gameMembers, setGameMembers] = useState([])\r\n    const [user, setUser] = useContext(UserContext)\r\n    const [isDataLoaded, setIsDataLoaded] = useState(false)\r\n\r\n    const history = useHistory()\r\n    const match = props.match\r\n\r\n    const isAuthor = game.authorNickname === Cookies.get('nickname')\r\n    \r\n    const ownerBackground ={\r\n        background: \"rgb(169, 192, 124)\"\r\n    }\r\n    const guestBackground = {\r\n        background: \"rgb(129, 172, 179)\"\r\n    }\r\n    const guestMemberBackground = {\r\n        background: \"rgb(161, 192, 196)\"\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const gameId = [match['params']['id']];\r\n        setUser(Cookies.get('nickname'));\r\n        if(Cookies.get('nickname')!==undefined && Cookies.get('nickname')!==\"*()unset\"){\r\n            fetch(properties.getGameByIdUri+gameId, {\r\n                credentials: 'include',\r\n                method: 'GET',\r\n                headers:{\r\n                    'Accept':'application/json'\r\n                }\r\n            }).then(response => {\r\n                if(response.status===403){\r\n                    setGame('You are not in this game');\r\n                    return \"403\";\r\n                }\r\n                return response.json();\r\n            }).then( data => {\r\n                if(data.toString()!==\"403\"){\r\n                    setGame(data)\r\n                    setGameMembers(data.members)\r\n                    setIsDataLoaded(true)\r\n                }\r\n            })\r\n        }\r\n    }, [setUser, match])\r\n\r\n    const deleteGame = (gameId) => {\r\n        fetch(properties.deleteGameUri+gameId, {\r\n            credentials: 'include',\r\n            method: 'DELETE'\r\n        }).then(response => {\r\n            history.push(\"/games\")\r\n        })\r\n    }\r\n\r\n    const removeGameMember = (nicknameAndGameId) => {\r\n        fetch(properties.removeGameMember+nicknameAndGameId[1], {\r\n            credentials: 'include',\r\n            method: 'DELETE',\r\n            body: nicknameAndGameId[0]\r\n        }).then(response => {\r\n            history.push(\"/game/\"+nicknameAndGameId[1])\r\n        })\r\n    }\r\n  \r\n    const leaveGame = (nicknameAndGameId) => {\r\n        fetch(properties.removeGameMember+nicknameAndGameId[1], {\r\n            credentials: 'include',\r\n            method: 'DELETE',\r\n            body: nicknameAndGameId[0]\r\n        }).then(response => {\r\n            history.push(\"/games\")\r\n        })\r\n    }\r\n\r\n    return(\r\n        \r\n            <div className=\"col-12 mt-2 mb-4\" >\r\n                {isDataLoaded ?\r\n                    <React.Fragment>\r\n                        {game.toString() === 'You are not in this game' ? \r\n                            <Status statusProp={game.toString()} />\r\n                        :\r\n                            <React.Fragment>\r\n                                {isAuthor ?\r\n                                <div className=\"col-12\">\r\n                                <Link to={\"/editPlan/\"+game.id} >\r\n                                    <button id=\"edit-button\">\r\n                                        <FontAwesomeIcon icon={faEdit} size=\"2x\"/>\r\n                                    </button>\r\n                                </Link>\r\n                                </div>\r\n                                :\r\n                                null\r\n                                }\r\n                                <div className=\"card mt-2\" style={isAuthor ? ownerBackground : guestBackground} >\r\n                                    <div className=\"card-body mb-0 p-0\">\r\n                                        {isAuthor ?\r\n                                            <React.Fragment>\r\n                                                <ModalConfirmationDialog functionArgument={game.id} functionToExecute={deleteGame} \r\n                                                actionPrefix=\"game\" warningText=\"Deleting: \" warningArgument={game.title}/>\r\n                                                <button id=\"delete-game\" data-toggle=\"modal\" data-target={\"#modalPopupIdgame\"+game.id}>\r\n                                                    <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                                </button>\r\n                                            </React.Fragment>\r\n                                            :\r\n                                            <React.Fragment>\r\n                                                <ModalConfirmationDialog functionArgument={[user, game.id]} \r\n                                                functionToExecute={leaveGame} actionPrefix=\"leaveGame\" warningText=\"Leaving plan: \" \r\n                                                warningArgument={game.title}/>\r\n                                                <button id=\"delete-game\" data-toggle=\"modal\" data-target={\"#modalPopupIdleaveGame\"+user+game.id}>\r\n                                                <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                                </button>\r\n                                            </React.Fragment>\r\n                                        }\r\n                                        <h5 className=\"card-title h5 pl-3 pr-4\">{game.title}</h5>\r\n                                    </div>\r\n\r\n                                    <hr className=\"mb-0 mt-0\"/>\r\n                                    {isAuthor ?\r\n                                        <AddGameMember gameId={[match['params']['id']]} />\r\n                                    :\r\n                                    null\r\n                                    }\r\n                                    <h5 className=\"pl-4 pr-1\">Members:</h5>\r\n\r\n                                    <div className=\"plan-members pl-2 mt-1 ml-1\" id={!isAuthor ? \"guest-plan-members\" : null}>\r\n                                        \r\n                                        {gameMembers.map(member => (\r\n                                            <div className=\"game-member border rounded-lg border-secondary mr-1 pr-1 pl-1 pb-1 mb-1 h6\"\r\n                                            key={\"member\"+member} style={isAuthor ? ownerBackground : guestMemberBackground}>\r\n                                                <div >{member}</div>\r\n                                                {isAuthor ?\r\n                                                    <React.Fragment>\r\n                                                        <ModalConfirmationDialog actionPrefix=\"gameMember\" functionArgument={[member,game.id]} \r\n                                                        functionToExecute={removeGameMember} warningText=\"Removing: \" warningArgument={member}/>\r\n                                                        <button className=\"pl-1\" id=\"remove-gamemember\" data-toggle=\"modal\" \r\n                                                            data-target={\"#modalPopupIdgameMember\"+member+game.id}>\r\n                                                            <FontAwesomeIcon icon={faTimesCircle}/>\r\n                                                        </button>\r\n                                                    </React.Fragment>\r\n                                                    :\r\n                                                    null\r\n                                                }\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    \r\n                                    <hr className=\"mb-0 mt-1 mb-1\" id=\"main-text-dividor\"/>\r\n                                    <pre className=\"ml-3 mainText\">{game.mainText}</pre>\r\n                                    <hr className=\"mb-0 mt-0\"/>\r\n                                    <h6 className=\"ml-3\">By: {game.authorNickname}</h6>\r\n                                    <div className=\"card-footer\">\r\n                                        <small className=\"text-muted\">Created: {new Date(game.creationDateTime).toLocaleString(\"en-GB\")+\r\n                                        \" GMT+\"+new Date().getTimezoneOffset()/-60} \r\n                                        </small>\r\n                                    </div>\r\n                                </div>\r\n                            </React.Fragment>\r\n                        }\r\n                    </React.Fragment>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n           \r\n        \r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Unauthorized() {\r\n    return(\r\n        <h1 className=\"regular-text\">Please log in</h1>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport default function Home(){\r\n\r\n    return(\r\n        \r\n        <div className=\"welcome\">\r\n            <h1 id=\"welcome\">Welcome to Teamplanner!</h1>\r\n            <div className=\"welcome-description\">\r\n                <p>Log in and choose a nickname. Create a plan for any needs you want:</p>\r\n                <p> meeting, event, game session with friends or just a reminder to yourself.</p>\r\n                <p>Add your friends by their nickname and invite them them to your plans</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function MyError  ({touched, message}) {\r\n    if(!touched){\r\n        return <div className=\"empty-sizeless-div\">&nbsp;</div>\r\n    }\r\n    \r\n    return <div className=\"font-weight-bold text-danger\">{message}</div>\r\n    \r\n}","import React,{useContext} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {Formik} from 'formik'\r\nimport MyError from './formUtils/MyError'\r\nimport {properties} from '../../Properties/Properties'\r\nimport {UserContext} from '../../State/UserContext'\r\nimport Cookies from 'js-cookie'\r\nimport Status from './formUtils/Status'\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n    nicknameField: Yup.string().max(16, \"Maximum length: 16\")\r\n    .required(\"Minimum length: 1\")\r\n    .matches(\"^[a-zA-Z0-9\\\\[\\\\]!@_-]{1,16}$\", \"Only A-Z, a-z, 0-9, []!@_- characters are allowed\")\r\n});\r\n\r\nexport default function ChooseNickname(){\r\n\r\n    const [, setUser] = useContext(UserContext)\r\n    return(\r\n \r\n        <Formik \r\n        initialValues={{nicknameField:\"\"}}\r\n        validationSchema={ValidationSchema}\r\n        onSubmit={(values, {setSubmitting, setStatus}) => {\r\n            setSubmitting(true);\r\n\r\n            (async () => {\r\n                await fetch(properties.chooseNicknameUri, {\r\n                credentials: 'include',\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept':'text/plain',\r\n                    'Content-type':'text/plain'\r\n                },\r\n                body: values.nicknameField\r\n                }).then(response => {//if user timed out - response status will not be 200\r\n                        if(response.status!==200){//then update user cotnext to update all components\r\n                            setUser(Cookies.get('nickname'))\r\n                        }\r\n                        return response.text()})\r\n                    .then(answer => {\r\n                        setStatus(answer);\r\n                        if(answer === \"Nickname changed\"){setUser(Cookies.get('nickname'))};\r\n                    });\r\n                setSubmitting(false);\r\n            })()\r\n            \r\n        }}\r\n        >\r\n            {({values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, status}) => (\r\n                \r\n                <form onSubmit={handleSubmit}>    \r\n                <div className=\"form-group regular-text\" id=\"nicknameForm\">\r\n                    <h2 className=\"font-weight-bold\">Set your nickname</h2>\r\n                    <input type=\"text\" \r\n                    className={touched.nicknameField\r\n                        && errors.nicknameField? \"form-control is-invalid\":\"form-control\"}\r\n                    name=\"nicknameField\" \r\n                    id=\"nicknameField\"\r\n                    placeholder=\"nickname\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.nicknameField}\r\n                    />\r\n                    <MyError touched={touched.nicknameField} message={errors.nicknameField} />\r\n                    <Status statusProp={status}/>  \r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</button>\r\n                </form> \r\n            )}\r\n        </Formik>\r\n    );\r\n};","import React, {useContext, useEffect} from \"react\"\nimport {Route, Redirect} from \"react-router-dom\"\nimport {UserContext} from '../State/UserContext'\nimport ChooseNickname from './Forms/ChooseNickname'\nimport Cookies from 'js-cookie'\n\nexport const ProtectedRoute = ({component: Component, ...rest}) =>{\n    const [user, setUser] = useContext(UserContext)\n    useEffect(() => {\n        setUser(Cookies.get('nickname'))\n    },[setUser])\n    \n    return(\n        <Route {...rest}\n            render={props => {\n                if (user !== undefined && user !== \"*()failed\" && user !=='*()unset'){\n                    return <Component {...props} />;\n                }else if(user===undefined){\n                    return <Redirect to={\n                        {\n                            pathname: \"/unauthorized\",\n                            state: {\n                                from: props.location\n                            }\n                        }\n                    }/>\n                }else if(user === '*()unset'){\n                    return <ChooseNickname {...props} />;\n                }else{\n                    return(<h2 className=\"regular-text\">Login error, please try again</h2>)\n                }\n            }}/>\n    )\n}","import React, {useContext} from 'react'\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport MyError from './formUtils/MyError'\r\nimport Status from './formUtils/Status'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {properties} from '../../Properties/Properties'\r\nimport Cookies from 'js-cookie'\r\nimport {UserContext} from '../../State/UserContext'\r\n\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n    titleField: Yup.string().max(50, \"Maximum length: 50\")\r\n    .required(\"Minimum length: 1\")\r\n    .matches(\"^[a-zA-Z0-9 ,:\\\\[\\\\]!@_-]{1,50}$\", \"Only A-Z, a-z, 0-9, []!@_- characters are allowed\"),\r\n    mainTextField: Yup.string().max(3000, \"Maximum length: 3000\")\r\n    .required(\"Minimum length: 1\")\r\n    .matches(\"^[a-zA-Z0-9 ,:;'/!.\\n\\\\[\\\\]!@_-]{1,3000}$\", \"Only A-Z, a-z, 0-9, []!@_- characters are allowed\")\r\n});\r\n\r\nexport default function CreatePlan(){\r\n\r\n    const[, setUser] = useContext(UserContext)\r\n    const history = useHistory()\r\n    \r\n\r\n    return(\r\n        <Formik\r\n            initialValues={{titleField:\"\", mainTextField:\"\"}}\r\n            validationSchema={ValidationSchema}\r\n            onSubmit={(values, {setSubmitting, setStatus}) =>{\r\n                setSubmitting(true);\r\n                \r\n                fetch(properties.createGameUri, {\r\n                        credentials: 'include',\r\n                        method: 'PUT',\r\n                        headers: {\r\n                            'Accept':'text/plain',\r\n                            'Content-type':'application/json'\r\n                        },\r\n                        body: JSON.stringify({\"title\":values.titleField, \r\n                                              \"mainText\":values.mainTextField})\r\n                    }).then(response => {//if user timed out - response status will not be 200\r\n                        if(response.status!==200){//then update user cotnext to update all components\r\n                            setUser(Cookies.get('nickname'))\r\n                        }\r\n                        return response.text()})\r\n                    .then(answer => {\r\n                        setStatus(answer);\r\n                        if(answer === \"Game plan created\"){history.push(\"/games\")}\r\n                    });\r\n                    setSubmitting(false);\r\n\r\n            }\r\n        }\r\n        >\r\n            {({values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, status}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group regular-text\" id=\"planForm\">\r\n                        <h2 className=\"font-weight-bold\">Create a game plan</h2>\r\n                        <input type=\"text\" \r\n                            className={touched.titleField\r\n                                && errors.titleField? \"form-control is-invalid\":\"form-control\"}\r\n                            name=\"titleField\" id=\"titleField\"\r\n                            placeholder=\"Title\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.titleField} />\r\n                        <MyError touched={touched.titleField} message={errors.titleField} />\r\n                        <br/>\r\n                        <textarea type=\"text\" rows=\"20\"\r\n                            className={touched.mainTextField\r\n                                && errors.mainTextField? \"form-control is-invalid\":\"form-control\"}\r\n                            name=\"mainTextField\" id=\"mainTextField\"\r\n                            placeholder=\"Details, Maximum 3000 characters\"\r\n                            onChange={e => {\r\n                                handleChange(e)\r\n                            }}\r\n                            onBlur={handleBlur}\r\n                            value={values.mainTextField} />\r\n                            {values.mainTextField.length}/3000\r\n                        <MyError touched={touched.mainTextField} message={errors.mainTextField} />\r\n                        <Status statusProp={status} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</button>\r\n                </form>\r\n            )\r\n\r\n            }\r\n        </Formik>\r\n        \r\n    )\r\n}","import React, {useState, useContext, useEffect} from 'react'\r\nimport {Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport MyError from './formUtils/MyError'\r\nimport Status from './formUtils/Status'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\nimport {properties} from '../../Properties/Properties'\r\nimport Cookies from 'js-cookie'\r\nimport {UserContext} from '../../State/UserContext'\r\n\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n    mainTextField: Yup.string().max(3000, \"Maximum length: 3000\")\r\n    .required(\"Minimum length: 1\")\r\n    .matches(\"^[a-zA-Z0-9 ,:;'/!.\\n\\\\[\\\\]!@_-]{1,3000}$\", \"Only A-Z, a-z, 0-9, []!@_- characters are allowed\")\r\n});\r\n\r\nexport default function EditPlanText({match}){\r\n\r\n    const[, setUser] = useContext(UserContext)\r\n    const history = useHistory()\r\n    const {id} = useParams()\r\n    const [gameDetails, setGameDetails] = useState('')\r\n\r\n    useEffect(() => {\r\n        const gameId = [match['params']['id']];\r\n        setUser(Cookies.get('nickname'));\r\n        if(Cookies.get('nickname')!==undefined && Cookies.get('nickname')!==\"*()unset\"){\r\n            fetch(properties.getGameByIdUri+gameId, {\r\n                credentials: 'include',\r\n                method: 'GET',\r\n                headers:{\r\n                    'Accept':'application/json'\r\n                }\r\n            }).then(response => {\r\n                if(response.status===403){\r\n                    setGameDetails('You are not in this game');\r\n                    return \"403\";\r\n                }\r\n                return response.json();\r\n            }).then( data => {\r\n                if(data.toString()!==\"403\"){\r\n                    setGameDetails(data.mainText)\r\n                }\r\n            })\r\n        }\r\n    }, [match, setUser])\r\n\r\n    return(\r\n        \r\n        <Formik\r\n            enableReinitialize={true}\r\n            initialValues={{mainTextField: gameDetails}}\r\n            validationSchema={ValidationSchema}\r\n            onSubmit={(values, {setSubmitting, setStatus}) =>{\r\n                setSubmitting(true);\r\n                \r\n                fetch(properties.editGameUri+id, {\r\n                        credentials: 'include',\r\n                        method: 'PATCH',\r\n                        headers: {\r\n                            'Accept':'text/plain',\r\n                            'Content-type':'application/json'\r\n                        },\r\n                        body: JSON.stringify({\"mainText\":values.mainTextField})\r\n                    }).then(response => {//if user timed out - response status will not be 200\r\n                        if(response.status!==200){//then update user cotnext to update all components\r\n                            setUser(Cookies.get('nickname'))\r\n                        }\r\n                        return response.text()})\r\n                    .then(answer => {\r\n                        setStatus(answer);\r\n                        if(answer === \"Game plan edited\"){history.push(\"/game/\"+id)}\r\n                    });\r\n                setSubmitting(false);\r\n            }\r\n        }\r\n        >\r\n            {({values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, status}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div className=\"form-group regular-text\" id=\"planForm\">\r\n                        <h2 className=\"font-weight-bold\">Edit details of your plan</h2>\r\n                        <textarea type=\"text\" rows=\"20\"\r\n                            className={touched.mainTextField\r\n                                && errors.mainTextField? \"form-control is-invalid mainText\":\"form-control mainText\"}\r\n                            name=\"mainTextField\" id=\"mainTextField\"\r\n                            placeholder=\"Details, Maximum 3000 characters\"\r\n\r\n                            onChange={e => {\r\n                                handleChange(e)\r\n                            }}\r\n                            onBlur={handleBlur}\r\n                            value={values.mainTextField} />\r\n                        {values.mainTextField.length}/3000\r\n                        <MyError touched={touched.mainTextField} message={errors.mainTextField} />\r\n                        <Status statusProp={status} />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</button>\r\n                </form>\r\n            )\r\n\r\n            }\r\n        </Formik>\r\n        \r\n    )\r\n}","import React, {useEffect, useState, useContext} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport {properties} from '../Properties/Properties'\r\nimport {UserContext} from '../State/UserContext'\r\nimport {Link, useHistory, useLocation} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlus, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport ModalConfirmationDialog from './Utils/ModalConfirmationDialog'\r\n\r\nexport default function Friends (){\r\n\r\n    const [user, setUser] = useContext(UserContext)\r\n    const [friends, setFriends] = useState([])\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        setUser(Cookies.get('nickname'));\r\n        if(Cookies.get('nickname')!==undefined && Cookies.get('nickname')!==\"*()unset\"){\r\n            fetch(properties.getMyFriendsUri, {\r\n                credentials: 'include',\r\n                method: 'GET',\r\n                headers:{\r\n                    'Accept':'application/json'\r\n                }\r\n            }).then(response => {\r\n                return response.json();\r\n            }).then( data => {\r\n                setFriends(data)\r\n            })\r\n        }\r\n    }, [user, setUser])\r\n\r\n    const deleteFriend = (friend) =>{\r\n        (async () => {\r\n            await fetch(properties.removeFriendUri , {\r\n                credentials: 'include',\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'Content-type':'text/plain'\r\n                },\r\n                body: friend\r\n            }).then(response => {\r\n               if(response.status === 200 && location.pathname==='/friends'){\r\n                    history.push(\"/\");\r\n                    history.push(\"/friends\")\r\n               }\r\n            })\r\n        })();\r\n    }\r\n\r\n    \r\n    return(\r\n        <div id=\"card-container\" className=\"card-deck\">\r\n            <div className=\"col-12 ml-1 sub-bar\">\r\n            <Link to=\"/addFriend\">\r\n                <button id=\"add-button\">\r\n                    <FontAwesomeIcon icon={faPlus} size=\"2x\"/>\r\n                </button>\r\n            </Link>\r\n            <h1 className=\"regular-text\">Friends</h1>\r\n            </div>\r\n            \r\n            {friends.map(friend => (\r\n                <div className=\"col-sm-12 col-md-6 col-lg-4 mt-2 mb-4\" key={friend}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body mb-0 p-0\">\r\n                        <ModalConfirmationDialog functionArgument={friend} functionToExecute={deleteFriend}\r\n                        actionPrefix=\"deleteFriend\" warningText=\"Removing friend: \" warningArgument={friend}/>\r\n                        <button id=\"delete-game\" data-toggle=\"modal\" data-target={\"#modalPopupIddeleteFriend\"+friend}>\r\n                            <FontAwesomeIcon icon={faTimesCircle}/>\r\n                        </button>\r\n                        <h5 className=\"card-title h5 pl-3 pr-4\">{friend}</h5>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}","import React,{useContext} from 'react'\r\nimport * as Yup from 'yup'\r\nimport {Formik} from 'formik'\r\nimport MyError from './formUtils/MyError'\r\nimport {properties} from '../../Properties/Properties'\r\nimport {UserContext} from '../../State/UserContext'\r\nimport Cookies from 'js-cookie'\r\nimport Status from './formUtils/Status'\r\n\r\nconst ValidationSchema = Yup.object().shape({\r\n    nicknameField: Yup.string().max(16, \"Maximum length: 16\")\r\n    .required(\"Minimum length: 1\")\r\n    .matches(\"^[a-zA-Z0-9\\\\[\\\\]!@_-]{1,16}$\", \"Only A-Z, a-z, 0-9, []!@_- characters are allowed\")\r\n});\r\n\r\nexport default function AddFriend(){\r\n\r\n    const [, setUser] = useContext(UserContext)\r\n    return(\r\n \r\n        <Formik \r\n        initialValues={{nicknameField:\"\"}}\r\n        validationSchema={ValidationSchema}\r\n        onSubmit={(values, {setSubmitting, setStatus}) => {\r\n            setSubmitting(true);\r\n\r\n            (async () => {\r\n                await fetch(properties.inviteFriendUri, {\r\n                credentials: 'include',\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept':'text/plain',\r\n                    'Content-type':'text/plain'\r\n                },\r\n                body: values.nicknameField\r\n                }).then(response => {//if user timed out - response status will not be 200\r\n                        if(response.status!==200){//then update user cotnext to update all components\r\n                            setUser(Cookies.get('nickname'))\r\n                        }\r\n                        return response.text()})\r\n                    .then(answer => {\r\n                        setStatus(answer);\r\n                        if(answer === \"Nickname changed\"){setUser(Cookies.get('nickname'))};\r\n                    });\r\n                setSubmitting(false);\r\n            })()\r\n        }}\r\n        >\r\n            {({values, errors, touched, handleChange, handleBlur, handleSubmit, isSubmitting, status}) => (\r\n                \r\n                <form onSubmit={handleSubmit}>    \r\n                <div className=\"form-group regular-text\" id=\"nicknameForm\">\r\n                    <h2 className=\"font-weight-bold\">Invite a friend</h2>\r\n                    <input type=\"text\" \r\n                    className={touched.nicknameField\r\n                        && errors.nicknameField? \"form-control is-invalid\":\"form-control\"}\r\n                    name=\"nicknameField\" \r\n                    id=\"nicknameField\"\r\n                    placeholder=\"nickname\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.nicknameField}\r\n                    />\r\n                    <MyError touched={touched.nicknameField} message={errors.nicknameField} />\r\n                    <Status statusProp={status}/>  \r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={isSubmitting}>Submit</button>\r\n                </form> \r\n            )}\r\n        </Formik>\r\n    );\r\n};","import React from 'react';\nimport './App.css';\nimport Nav from './Components/Nav'\nimport Account from './Components/Account'\nimport Games from './Components/Games'\nimport Game from './Components/Game'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {UserProvider} from './State/UserContext'\nimport Unauthorized from './Components/Unauthorized';\nimport Home from './Components/Home';\nimport {ProtectedRoute} from './Components/ProtectedRoute'\nimport ChooseNickname from './Components/Forms/ChooseNickname'\nimport CreatePlan from './Components/Forms/CreatePlan'\nimport EditPlanText from './Components/Forms/EditPlanText'\nimport Friends from \"./Components/Friends\"\nimport AddFriend from \"./Components/Forms/AddFriend\"\n\nfunction App() {\n  return (\n    \n    <UserProvider>\n      <Router>\n        <Nav />\n        <div className=\"container\" id=\"main-container\">\n          <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/unauthorized\" component={Unauthorized} />\n              <ProtectedRoute path=\"/chooseNickname\" component={ChooseNickname}/>\n              <ProtectedRoute path=\"/games\" exact component={Games}/>\n              <ProtectedRoute path=\"/game/:id\" exact component={Game} />\n              <ProtectedRoute path=\"/createPlan\" component={CreatePlan} />\n              <ProtectedRoute path=\"/editPlan/:id\" exact component={EditPlanText} />\n              <ProtectedRoute path=\"/account\" component={Account} />\n              <ProtectedRoute path=\"/friends\" component={Friends} />\n              <ProtectedRoute path=\"/addFriend\" component={AddFriend} />\n          </Switch>\n        </div>\n      </Router>\n    </UserProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}